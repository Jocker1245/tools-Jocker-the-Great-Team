import base64
x = ( b'''import os
from time import sleep as timeout
import sys
import time
os.system ('clear')
print('\033[0;31m _____   _   _   _____        \033[0;33m_____   _____    _____       ___   _____        \033[0;34m_____   _____       ___       ___  ___  ')
timeout(0.1)
print('\033[0;31m|_   _| | | | | | ____|      \033[0;33m/  ___| |  _  \  | ____|     /   | |_   _|      \033[0;34m|_   _| | ____|     /   |     /   |/   | ')
timeout(0.1)
print('\033[0;31m  | |   | |_| | | |__        \033[0;33m| |     | |_| |  | |__      / /| |   | |          \033[0;34m| |   | |__      / /| |    / /|   /| | ')
timeout(0.1)
print('\033[0;31m  | |   |  _  | |  __|       \033[0;33m| |  _  |  _  /  |  __|    / / | |   | |          \033[0;34m| |   |  __|    / / | |   / / |__/ | | ')
timeout(0.1)
print('\033[0;31m | |   | | | | | |___       \033[0;33m| |_| | | | \ \  | |___   / /  | |   | |          \033[0;34m| |   | |___   / /  | |  / /       | | ')
timeout(0.1)
print('\033[0;31m  |_|   |_| |_| |_____|      \033[0;33m\_____/ |_|  \_\ |_____| /_/   |_|   |_|          \033[0;34m|_|   |_____| /_/   |_| /_/        |_| ')
timeout(0.1)
print ('                          \033[1;32m                        ¯  ')
timeout(0.1)
print (' ')
print ("\033[1;31m  ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗           ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╢  \033[1;36m H.A.M.M.E.R   \033[1;32m[\033[1;31m1\033[1;32m] \033[1;31m╟-\033[1;33mGreat--Team\033[1;31m-╢   \033[1;36m D-DOS Tool   \033[1;32m[\033[1;31m2\033[1;32m] \033[1;31m╟")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝           ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;36m              Jocker .\033[1;33m The Great Team \033[1;36m. C o M           ")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;31m  ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗           ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╢  \033[1;36m GOLDEN - EYE  \033[1;32m[\033[1;31m3\033[1;32m] \033[1;31m╟-\033[1;33mThe Greatest Team\033[1;31m-╢    \033[1;36m SLOWLORIS   \033[1;32m[\033[1;31m4\033[1;32m] \033[1;31m╟")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝           ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;36m              Jocker\033[1;33m The Great Team \033[1;36m. C o M           ")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;31m  ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗           ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╢  \033[1;36m X.E.R.X.E.S   \033[1;32m[\033[1;31m5\033[1;32m] \033[1;31m╟-\033[1;33mThe Great Team\033[1;31m-╢    \033[1;36m  H.U.L.K   \033[1;32m[\033[1;31m6\033[1;32m]  \033[1;31m╟")
timeout(0.1)
print ("\033[1;31m  ╢                     ╟           ╢                     ╟")
timeout(0.1)
print ("\033[1;31m  ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝           ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;36m            Jocker  \033[1;33m The Great Team\033[1;36m. C o M           ")
timeout(0.1)
print ("\033[1;36m  _________________________________________________________")
timeout(0.1)
print ("\033[1;31m                   ╔╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╗                 ")
timeout(0.1)
print ("\033[1;31m                   ╟                     ╟                 ")
timeout(0.1)
print ("\033[1;33m     Great team TOOL  \033[1;31m    ╢ \033[1;36m  BACK TO MAIN \033[1;32m[\033[1;31m99\033[1;32m] \033[1;31m╟   \033[1;33m   The Great Team  ")
timeout(0.1)
print ("\033[1;31m                   ╢                     ╟                 ")
timeout(0.1)
print ("\033[1;31m                   ╚╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╧╤╝                 ")
timeout(0.1)
print ("\033[1;36m  __________________|||||||||||||||||||||__________________")
timeout(0.1)
print (' ')
print ('\033[1;32mFor  Choose a Number \033[1;31m1,2,3,4,5...')
timeout(0.1)
dos = input ("\033[1;33mGive I wiat command ..?\033[1;31m (0_0)\033[1;33m »»» ")
if dos == '1' :
    (0.1,'\n\t   \033[1;31m[   PLEASE WAIT .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/CruzTed/Hammer')
elif dos == '2' :
    (0.1,'\n\t   \033[1;31m[   PLEASE WAIT .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/Ha3MrX/DDos-Attack')
    os.system ('mv DDos-Attack ~')
elif dos == '3' :
    (0.1,'\n\t   \033[1;31m[   PLEASE WAIT .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/jseidl/GoldenEye')
    os.system ('mv GoldenEye ~')
elif dos == '4' :
    (0.1,'\n\t   \033[1;31m[   PLEASE WAIT .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/gkbrk/slowloris.git')
    os.system ('mv slowloris.git ~')
elif dos == '5' :
    (0.1,'\n\t   \033[1;31m[   PLEASE WAIT .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/zanyarjamal/xerxes')
    os.system ('mv xerxes ~')
elif dos == '6' :
    (0.1,'\n\t   \033[1;31m[   Loding .... ]')
    os.system ('clear')
    os.system ('git clone https://github.com/grafov/hulk')
    os.system ('mv hulk ~')
elif dos == '99' :
    (0.1,'\n\t   \033[1;31m[   Loading .... ]')
    os.system ('clear')
    ##########################

''' )
exec (base64.b64decode(x))
